{"componentChunkName":"component---src-templates-codepen-example-js","path":"/redirect-to-codepen/update-on-async-rendering/adding-event-listeners-after","result":{"pageContext":{"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"// After\\r\\nclass ExampleComponent extends React.Component {\\r\\n  // highlight-range{1-3}\\r\\n  state = {\\r\\n    subscribedValue: this.props.dataSource.value,\\r\\n  };\\r\\n  // highlight-line\\r\\n  // highlight-range{1-18}\\r\\n  componentDidMount() {\\r\\n    // Event listeners are only safe to add after mount,\\r\\n    // So they won't leak if mount is interrupted or errors.\\r\\n    this.props.dataSource.subscribe(\\r\\n      this.handleSubscriptionChange\\r\\n    );\\r\\n\\r\\n    // External values could change between render and mount,\\r\\n    // In some cases it may be important to handle this case.\\r\\n    if (\\r\\n      this.state.subscribedValue !==\\r\\n      this.props.dataSource.value\\r\\n    ) {\\r\\n      this.setState({\\r\\n        subscribedValue: this.props.dataSource.value,\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n\\r\\n  componentWillUnmount() {\\r\\n    this.props.dataSource.unsubscribe(\\r\\n      this.handleSubscriptionChange\\r\\n    );\\r\\n  }\\r\\n\\r\\n  handleSubscriptionChange = dataSource => {\\r\\n    this.setState({\\r\\n      subscribedValue: dataSource.value,\\r\\n    });\\r\\n  };\\r\\n}\\r\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}},"staticQueryHashes":[]}