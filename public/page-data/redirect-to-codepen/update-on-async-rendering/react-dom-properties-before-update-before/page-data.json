{"componentChunkName":"component---src-templates-codepen-example-js","path":"/redirect-to-codepen/update-on-async-rendering/react-dom-properties-before-update-before","result":{"pageContext":{"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"class ScrollingList extends React.Component {\\r\\n  listRef = null;\\r\\n  previousScrollOffset = null;\\r\\n\\r\\n  // highlight-range{1-8}\\r\\n  componentWillUpdate(nextProps, nextState) {\\r\\n    // Are we adding new items to the list?\\r\\n    // Capture the scroll position so we can adjust scroll later.\\r\\n    if (this.props.list.length < nextProps.list.length) {\\r\\n      this.previousScrollOffset =\\r\\n        this.listRef.scrollHeight - this.listRef.scrollTop;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  // highlight-range{1-10}\\r\\n  componentDidUpdate(prevProps, prevState) {\\r\\n    // If previousScrollOffset is set, we've just added new items.\\r\\n    // Adjust scroll so these new items don't push the old ones out of view.\\r\\n    if (this.previousScrollOffset !== null) {\\r\\n      this.listRef.scrollTop =\\r\\n        this.listRef.scrollHeight -\\r\\n        this.previousScrollOffset;\\r\\n      this.previousScrollOffset = null;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  render() {\\r\\n    return (\\r\\n      <div ref={this.setListRef}>\\r\\n        {/* ...contents... */}\\r\\n      </div>\\r\\n    );\\r\\n  }\\r\\n\\r\\n  setListRef = ref => {\\r\\n    this.listRef = ref;\\r\\n  };\\r\\n}\\r\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}},"staticQueryHashes":[]}