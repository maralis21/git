{"componentChunkName":"component---src-templates-codepen-example-js","path":"/redirect-to-codepen/update-on-async-rendering/adding-event-listeners-create-subscription","result":{"pageContext":{"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"import {createSubscription} from 'create-subscription';\\r\\n\\r\\nconst Subscription = createSubscription({\\r\\n  getCurrentValue(sourceProp) {\\r\\n    // Return the current value of the subscription (sourceProp).\\r\\n    return sourceProp.value;\\r\\n  },\\r\\n\\r\\n  subscribe(sourceProp, callback) {\\r\\n    function handleSubscriptionChange() {\\r\\n      callback(sourceProp.value);\\r\\n    }\\r\\n\\r\\n    // Subscribe (e.g. add an event listener) to the subscription (sourceProp).\\r\\n    // Call callback(newValue) whenever a subscription changes.\\r\\n    sourceProp.subscribe(handleSubscriptionChange);\\r\\n\\r\\n    // Return an unsubscribe method.\\r\\n    return function unsubscribe() {\\r\\n      sourceProp.unsubscribe(handleSubscriptionChange);\\r\\n    };\\r\\n  },\\r\\n});\\r\\n\\r\\n// Rather than passing the subscribable source to our ExampleComponent,\\r\\n// We could just pass the subscribed value directly:\\r\\n<Subscription source={dataSource}>\\r\\n  {value => <ExampleComponent subscribedValue={value} />}\\r\\n</Subscription>;\\r\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}},"staticQueryHashes":[]}