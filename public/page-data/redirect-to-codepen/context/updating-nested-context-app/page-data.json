{"componentChunkName":"component---src-templates-codepen-example-js","path":"/redirect-to-codepen/context/updating-nested-context-app","result":{"pageContext":{"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"import {ThemeContext, themes} from './theme-context';\\r\\nimport ThemeTogglerButton from './theme-toggler-button';\\r\\n\\r\\nclass App extends React.Component {\\r\\n  constructor(props) {\\r\\n    super(props);\\r\\n\\r\\n    this.toggleTheme = () => {\\r\\n      this.setState(state => ({\\r\\n        theme:\\r\\n          state.theme === themes.dark\\r\\n            ? themes.light\\r\\n            : themes.dark,\\r\\n      }));\\r\\n    };\\r\\n\\r\\n    // highlight-range{1-2,5}\\r\\n    // State also contains the updater function so it will\\r\\n    // be passed down into the context provider\\r\\n    this.state = {\\r\\n      theme: themes.light,\\r\\n      toggleTheme: this.toggleTheme,\\r\\n    };\\r\\n  }\\r\\n\\r\\n  render() {\\r\\n    // highlight-range{1,3}\\r\\n    // The entire state is passed to the provider\\r\\n    return (\\r\\n      <ThemeContext.Provider value={this.state}>\\r\\n        <Content />\\r\\n      </ThemeContext.Provider>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nfunction Content() {\\r\\n  return (\\r\\n    <div>\\r\\n      <ThemeTogglerButton />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\\r\\nconst root = ReactDOM.createRoot(\\r\\n  document.getElementById('root')\\r\\n);\\r\\nroot.render(<App />);\\r\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}},"staticQueryHashes":[]}