{"componentChunkName":"component---src-templates-codepen-example-js","path":"/redirect-to-codepen/context/motivation-solution","result":{"pageContext":{"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"// highlight-range{1-4}\\r\\n// Context lets us pass a value deep into the component tree\\r\\n// without explicitly threading it through every component.\\r\\n// Create a context for the current theme (with \\\"light\\\" as the default).\\r\\nconst ThemeContext = React.createContext('light');\\r\\n\\r\\nclass App extends React.Component {\\r\\n  render() {\\r\\n    // highlight-range{1-3,5}\\r\\n    // Use a Provider to pass the current theme to the tree below.\\r\\n    // Any component can read it, no matter how deep it is.\\r\\n    // In this example, we're passing \\\"dark\\\" as the current value.\\r\\n    return (\\r\\n      <ThemeContext.Provider value=\\\"dark\\\">\\r\\n        <Toolbar />\\r\\n      </ThemeContext.Provider>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\n// highlight-range{1,2}\\r\\n// A component in the middle doesn't have to\\r\\n// pass the theme down explicitly anymore.\\r\\nfunction Toolbar() {\\r\\n  return (\\r\\n    <div>\\r\\n      <ThemedButton />\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\\r\\nclass ThemedButton extends React.Component {\\r\\n  // highlight-range{1-3,6}\\r\\n  // Assign a contextType to read the current theme context.\\r\\n  // React will find the closest theme Provider above and use its value.\\r\\n  // In this example, the current theme is \\\"dark\\\".\\r\\n  static contextType = ThemeContext;\\r\\n  render() {\\r\\n    return <Button theme={this.context} />;\\r\\n  }\\r\\n}\\r\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}},"staticQueryHashes":[]}