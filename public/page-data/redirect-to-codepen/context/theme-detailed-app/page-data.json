{"componentChunkName":"component---src-templates-codepen-example-js","path":"/redirect-to-codepen/context/theme-detailed-app","result":{"pageContext":{"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"import {ThemeContext, themes} from './theme-context';\\r\\nimport ThemedButton from './themed-button';\\r\\n\\r\\n// An intermediate component that uses the ThemedButton\\r\\nfunction Toolbar(props) {\\r\\n  return (\\r\\n    <ThemedButton onClick={props.changeTheme}>\\r\\n      Change Theme\\r\\n    </ThemedButton>\\r\\n  );\\r\\n}\\r\\n\\r\\nclass App extends React.Component {\\r\\n  constructor(props) {\\r\\n    super(props);\\r\\n    this.state = {\\r\\n      theme: themes.light,\\r\\n    };\\r\\n\\r\\n    this.toggleTheme = () => {\\r\\n      this.setState(state => ({\\r\\n        theme:\\r\\n          state.theme === themes.dark\\r\\n            ? themes.light\\r\\n            : themes.dark,\\r\\n      }));\\r\\n    };\\r\\n  }\\r\\n\\r\\n  render() {\\r\\n    //highlight-range{1-3}\\r\\n    // The ThemedButton button inside the ThemeProvider\\r\\n    // uses the theme from state while the one outside uses\\r\\n    // the default dark theme\\r\\n    //highlight-range{3-5,7}\\r\\n    return (\\r\\n      <Page>\\r\\n        <ThemeContext.Provider value={this.state.theme}>\\r\\n          <Toolbar changeTheme={this.toggleTheme} />\\r\\n        </ThemeContext.Provider>\\r\\n        <Section>\\r\\n          <ThemedButton />\\r\\n        </Section>\\r\\n      </Page>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nconst root = ReactDOM.createRoot(\\r\\n  document.getElementById('root')\\r\\n);\\r\\nroot.render(<App />);\\r\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}},"staticQueryHashes":[]}