{"componentChunkName":"component---src-templates-codepen-example-js","path":"/redirect-to-codepen/reconciliation/index-used-as-key","result":{"pageContext":{"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"const ToDo = props => (\\r\\n  <tr>\\r\\n    <td>\\r\\n      <label>{props.id}</label>\\r\\n    </td>\\r\\n    <td>\\r\\n      <input />\\r\\n    </td>\\r\\n    <td>\\r\\n      <label>{props.createdAt.toTimeString()}</label>\\r\\n    </td>\\r\\n  </tr>\\r\\n);\\r\\n\\r\\nclass ToDoList extends React.Component {\\r\\n  constructor() {\\r\\n    super();\\r\\n    const date = new Date();\\r\\n    const todoCounter = 1;\\r\\n    this.state = {\\r\\n      todoCounter: todoCounter,\\r\\n      list: [\\r\\n        {\\r\\n          id: todoCounter,\\r\\n          createdAt: date,\\r\\n        },\\r\\n      ],\\r\\n    };\\r\\n  }\\r\\n\\r\\n  sortByEarliest() {\\r\\n    const sortedList = this.state.list.sort((a, b) => {\\r\\n      return a.createdAt - b.createdAt;\\r\\n    });\\r\\n    this.setState({\\r\\n      list: [...sortedList],\\r\\n    });\\r\\n  }\\r\\n\\r\\n  sortByLatest() {\\r\\n    const sortedList = this.state.list.sort((a, b) => {\\r\\n      return b.createdAt - a.createdAt;\\r\\n    });\\r\\n    this.setState({\\r\\n      list: [...sortedList],\\r\\n    });\\r\\n  }\\r\\n\\r\\n  addToEnd() {\\r\\n    const date = new Date();\\r\\n    const nextId = this.state.todoCounter + 1;\\r\\n    const newList = [\\r\\n      ...this.state.list,\\r\\n      {id: nextId, createdAt: date},\\r\\n    ];\\r\\n    this.setState({\\r\\n      list: newList,\\r\\n      todoCounter: nextId,\\r\\n    });\\r\\n  }\\r\\n\\r\\n  addToStart() {\\r\\n    const date = new Date();\\r\\n    const nextId = this.state.todoCounter + 1;\\r\\n    const newList = [\\r\\n      {id: nextId, createdAt: date},\\r\\n      ...this.state.list,\\r\\n    ];\\r\\n    this.setState({\\r\\n      list: newList,\\r\\n      todoCounter: nextId,\\r\\n    });\\r\\n  }\\r\\n\\r\\n  render() {\\r\\n    return (\\r\\n      <div>\\r\\n        <code>key=index</code>\\r\\n        <br />\\r\\n        <button onClick={this.addToStart.bind(this)}>\\r\\n          Add New to Start\\r\\n        </button>\\r\\n        <button onClick={this.addToEnd.bind(this)}>\\r\\n          Add New to End\\r\\n        </button>\\r\\n        <button onClick={this.sortByEarliest.bind(this)}>\\r\\n          Sort by Earliest\\r\\n        </button>\\r\\n        <button onClick={this.sortByLatest.bind(this)}>\\r\\n          Sort by Latest\\r\\n        </button>\\r\\n        <table>\\r\\n          <tr>\\r\\n            <th>ID</th>\\r\\n            <th />\\r\\n            <th>created at</th>\\r\\n          </tr>\\r\\n          {this.state.list.map((todo, index) => (\\r\\n            <ToDo key={index} {...todo} />\\r\\n          ))}\\r\\n        </table>\\r\\n      </div>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nReactDOM.render(\\r\\n  <ToDoList />,\\r\\n  document.getElementById('root')\\r\\n);\\r\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}},"staticQueryHashes":[]}