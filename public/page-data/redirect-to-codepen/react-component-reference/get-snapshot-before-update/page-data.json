{"componentChunkName":"component---src-templates-codepen-example-js","path":"/redirect-to-codepen/react-component-reference/get-snapshot-before-update","result":{"pageContext":{"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"class ScrollingList extends React.Component {\\r\\n  constructor(props) {\\r\\n    super(props);\\r\\n    this.listRef = React.createRef();\\r\\n  }\\r\\n\\r\\n  getSnapshotBeforeUpdate(prevProps, prevState) {\\r\\n    // Are we adding new items to the list?\\r\\n    // Capture the scroll position so we can adjust scroll later.\\r\\n    if (prevProps.list.length < this.props.list.length) {\\r\\n      const list = this.listRef.current;\\r\\n      return list.scrollHeight - list.scrollTop;\\r\\n    }\\r\\n    return null;\\r\\n  }\\r\\n\\r\\n  componentDidUpdate(prevProps, prevState, snapshot) {\\r\\n    // If we have a snapshot value, we've just added new items.\\r\\n    // Adjust scroll so these new items don't push the old ones out of view.\\r\\n    // (snapshot here is the value returned from getSnapshotBeforeUpdate)\\r\\n    if (snapshot !== null) {\\r\\n      const list = this.listRef.current;\\r\\n      list.scrollTop = list.scrollHeight - snapshot;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  render() {\\r\\n    return (\\r\\n      <div ref={this.listRef}>{/* ...contents... */}</div>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}},"staticQueryHashes":[]}